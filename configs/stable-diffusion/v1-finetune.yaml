model:
  base_learning_rate: 0.5e-05
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    linear_start: 0.00085
    linear_end: 0.0120
    num_timesteps_cond: 1
    log_every_t: 1
    timesteps: 1000
    first_stage_key: image
    cond_stage_key: caption
    image_size: 64
    channels: 4
    cond_stage_trainable: true   # Note: different from the one we trained before
    conditioning_key: crossattn
    monitor: val/loss
    scale_factor: 0.18215
    use_ema: False


    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 32 # unused
        in_channels: 4
        out_channels: 4
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_heads: 8
        use_spatial_transformer: True
        transformer_depth: 1
        context_dim: 768
        use_checkpoint: True
        legacy: False

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 4
        monitor: val/rec_loss
        ddconfig:
          double_z: true
          z_channels: 4
          resolution: 512
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config:
      target: ldm.modules.encoders.modules.FrozenCLIPEmbedder

data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 1
    num_workers: 2
    wrap: false
    train:
      target: ldm.data.custom_dataset.CustomDataset
      params:
        data_root: "/content/data/DARE/train/pipe_data"
        size: 512
        set: train
        per_image_tokens: false
        repeats: 1

    regularize:
      target: ldm.data.custom_dataset.CustomDataset
      params:
        data_root: "/content/data/DARE/train/pipe_data"
        size: 512
        set: train
        per_image_tokens: false
        repeats: 1

#    validation:
#      target: ldm.data.custom_dataset.CustomDataset
#      params:
#        data_root: "/content/data/DARE/val"
#        size: 512
#        set: val
#        per_image_tokens: false
#        repeats: 1

lightning:
  modelcheckpoint:
    params:
      every_n_train_steps: 1
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 10 # Determines how often to log images, 1 menas after each batch it runs image_log call-back to generate new images
        max_images: 8 # Maximum number of images to log at each logging step.
        increase_log_steps: False

#    prior_preservation:
#      target: ldm.dream_booth.custom_callbacks.PriorPreservation
#      params:
#        batch_frequency: 1 # Determines how often to perform callback, 1 menas after each batch it runs image_log call-back to generate new images
#        prior_config: "configs/stable-diffusion/v1-inference.yaml"


  trainer:
    benchmark: True
    max_steps: 800
    gpus: 0,
    